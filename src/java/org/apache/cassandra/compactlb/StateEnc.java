// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state.proto

package org.apache.cassandra.compactlb;

public final class StateEnc {
  private StateEnc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface StateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:State)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 now_millis = 1;</code>
     */
    long getNowMillis();

    /**
     * <code>repeated .ReplicaSet replica_sets = 2;</code>
     */
    java.util.List<org.apache.cassandra.compactlb.StateEnc.ReplicaSet> 
        getReplicaSetsList();
    /**
     * <code>repeated .ReplicaSet replica_sets = 2;</code>
     */
    org.apache.cassandra.compactlb.StateEnc.ReplicaSet getReplicaSets(int index);
    /**
     * <code>repeated .ReplicaSet replica_sets = 2;</code>
     */
    int getReplicaSetsCount();
    /**
     * <code>repeated .ReplicaSet replica_sets = 2;</code>
     */
    java.util.List<? extends org.apache.cassandra.compactlb.StateEnc.ReplicaSetOrBuilder> 
        getReplicaSetsOrBuilderList();
    /**
     * <code>repeated .ReplicaSet replica_sets = 2;</code>
     */
    org.apache.cassandra.compactlb.StateEnc.ReplicaSetOrBuilder getReplicaSetsOrBuilder(
        int index);

    /**
     * <code>repeated .Node nodes = 3;</code>
     */
    java.util.List<org.apache.cassandra.compactlb.StateEnc.Node> 
        getNodesList();
    /**
     * <code>repeated .Node nodes = 3;</code>
     */
    org.apache.cassandra.compactlb.StateEnc.Node getNodes(int index);
    /**
     * <code>repeated .Node nodes = 3;</code>
     */
    int getNodesCount();
    /**
     * <code>repeated .Node nodes = 3;</code>
     */
    java.util.List<? extends org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <code>repeated .Node nodes = 3;</code>
     */
    org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder getNodesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * When looking for node-level data, first scan through replica_sets
   * then through nodes.
   * Either may not be present in a given message.
   * </pre>
   *
   * Protobuf type {@code State}
   */
  public  static final class State extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:State)
      StateOrBuilder {
    // Use State.newBuilder() to construct.
    private State(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private State() {
      nowMillis_ = 0L;
      replicaSets_ = java.util.Collections.emptyList();
      nodes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private State(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              nowMillis_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                replicaSets_ = new java.util.ArrayList<org.apache.cassandra.compactlb.StateEnc.ReplicaSet>();
                mutable_bitField0_ |= 0x00000002;
              }
              replicaSets_.add(
                  input.readMessage(org.apache.cassandra.compactlb.StateEnc.ReplicaSet.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                nodes_ = new java.util.ArrayList<org.apache.cassandra.compactlb.StateEnc.Node>();
                mutable_bitField0_ |= 0x00000004;
              }
              nodes_.add(
                  input.readMessage(org.apache.cassandra.compactlb.StateEnc.Node.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          replicaSets_ = java.util.Collections.unmodifiableList(replicaSets_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.cassandra.compactlb.StateEnc.internal_static_State_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.cassandra.compactlb.StateEnc.internal_static_State_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.cassandra.compactlb.StateEnc.State.class, org.apache.cassandra.compactlb.StateEnc.State.Builder.class);
    }

    private int bitField0_;
    public static final int NOW_MILLIS_FIELD_NUMBER = 1;
    private long nowMillis_;
    /**
     * <code>optional int64 now_millis = 1;</code>
     */
    public long getNowMillis() {
      return nowMillis_;
    }

    public static final int REPLICA_SETS_FIELD_NUMBER = 2;
    private java.util.List<org.apache.cassandra.compactlb.StateEnc.ReplicaSet> replicaSets_;
    /**
     * <code>repeated .ReplicaSet replica_sets = 2;</code>
     */
    public java.util.List<org.apache.cassandra.compactlb.StateEnc.ReplicaSet> getReplicaSetsList() {
      return replicaSets_;
    }
    /**
     * <code>repeated .ReplicaSet replica_sets = 2;</code>
     */
    public java.util.List<? extends org.apache.cassandra.compactlb.StateEnc.ReplicaSetOrBuilder> 
        getReplicaSetsOrBuilderList() {
      return replicaSets_;
    }
    /**
     * <code>repeated .ReplicaSet replica_sets = 2;</code>
     */
    public int getReplicaSetsCount() {
      return replicaSets_.size();
    }
    /**
     * <code>repeated .ReplicaSet replica_sets = 2;</code>
     */
    public org.apache.cassandra.compactlb.StateEnc.ReplicaSet getReplicaSets(int index) {
      return replicaSets_.get(index);
    }
    /**
     * <code>repeated .ReplicaSet replica_sets = 2;</code>
     */
    public org.apache.cassandra.compactlb.StateEnc.ReplicaSetOrBuilder getReplicaSetsOrBuilder(
        int index) {
      return replicaSets_.get(index);
    }

    public static final int NODES_FIELD_NUMBER = 3;
    private java.util.List<org.apache.cassandra.compactlb.StateEnc.Node> nodes_;
    /**
     * <code>repeated .Node nodes = 3;</code>
     */
    public java.util.List<org.apache.cassandra.compactlb.StateEnc.Node> getNodesList() {
      return nodes_;
    }
    /**
     * <code>repeated .Node nodes = 3;</code>
     */
    public java.util.List<? extends org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <code>repeated .Node nodes = 3;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <code>repeated .Node nodes = 3;</code>
     */
    public org.apache.cassandra.compactlb.StateEnc.Node getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <code>repeated .Node nodes = 3;</code>
     */
    public org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nowMillis_ != 0L) {
        output.writeInt64(1, nowMillis_);
      }
      for (int i = 0; i < replicaSets_.size(); i++) {
        output.writeMessage(2, replicaSets_.get(i));
      }
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(3, nodes_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nowMillis_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, nowMillis_);
      }
      for (int i = 0; i < replicaSets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, replicaSets_.get(i));
      }
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, nodes_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.cassandra.compactlb.StateEnc.State)) {
        return super.equals(obj);
      }
      org.apache.cassandra.compactlb.StateEnc.State other = (org.apache.cassandra.compactlb.StateEnc.State) obj;

      boolean result = true;
      result = result && (getNowMillis()
          == other.getNowMillis());
      result = result && getReplicaSetsList()
          .equals(other.getReplicaSetsList());
      result = result && getNodesList()
          .equals(other.getNodesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + NOW_MILLIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNowMillis());
      if (getReplicaSetsCount() > 0) {
        hash = (37 * hash) + REPLICA_SETS_FIELD_NUMBER;
        hash = (53 * hash) + getReplicaSetsList().hashCode();
      }
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.cassandra.compactlb.StateEnc.State parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.cassandra.compactlb.StateEnc.State parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.cassandra.compactlb.StateEnc.State parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.cassandra.compactlb.StateEnc.State parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.cassandra.compactlb.StateEnc.State parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.cassandra.compactlb.StateEnc.State parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.cassandra.compactlb.StateEnc.State parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.cassandra.compactlb.StateEnc.State parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.cassandra.compactlb.StateEnc.State parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.cassandra.compactlb.StateEnc.State parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.cassandra.compactlb.StateEnc.State prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * When looking for node-level data, first scan through replica_sets
     * then through nodes.
     * Either may not be present in a given message.
     * </pre>
     *
     * Protobuf type {@code State}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:State)
        org.apache.cassandra.compactlb.StateEnc.StateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.cassandra.compactlb.StateEnc.internal_static_State_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.cassandra.compactlb.StateEnc.internal_static_State_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.cassandra.compactlb.StateEnc.State.class, org.apache.cassandra.compactlb.StateEnc.State.Builder.class);
      }

      // Construct using org.apache.cassandra.compactlb.StateEnc.State.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getReplicaSetsFieldBuilder();
          getNodesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        nowMillis_ = 0L;

        if (replicaSetsBuilder_ == null) {
          replicaSets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          replicaSetsBuilder_.clear();
        }
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.cassandra.compactlb.StateEnc.internal_static_State_descriptor;
      }

      public org.apache.cassandra.compactlb.StateEnc.State getDefaultInstanceForType() {
        return org.apache.cassandra.compactlb.StateEnc.State.getDefaultInstance();
      }

      public org.apache.cassandra.compactlb.StateEnc.State build() {
        org.apache.cassandra.compactlb.StateEnc.State result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.cassandra.compactlb.StateEnc.State buildPartial() {
        org.apache.cassandra.compactlb.StateEnc.State result = new org.apache.cassandra.compactlb.StateEnc.State(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.nowMillis_ = nowMillis_;
        if (replicaSetsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            replicaSets_ = java.util.Collections.unmodifiableList(replicaSets_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.replicaSets_ = replicaSets_;
        } else {
          result.replicaSets_ = replicaSetsBuilder_.build();
        }
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.cassandra.compactlb.StateEnc.State) {
          return mergeFrom((org.apache.cassandra.compactlb.StateEnc.State)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.cassandra.compactlb.StateEnc.State other) {
        if (other == org.apache.cassandra.compactlb.StateEnc.State.getDefaultInstance()) return this;
        if (other.getNowMillis() != 0L) {
          setNowMillis(other.getNowMillis());
        }
        if (replicaSetsBuilder_ == null) {
          if (!other.replicaSets_.isEmpty()) {
            if (replicaSets_.isEmpty()) {
              replicaSets_ = other.replicaSets_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureReplicaSetsIsMutable();
              replicaSets_.addAll(other.replicaSets_);
            }
            onChanged();
          }
        } else {
          if (!other.replicaSets_.isEmpty()) {
            if (replicaSetsBuilder_.isEmpty()) {
              replicaSetsBuilder_.dispose();
              replicaSetsBuilder_ = null;
              replicaSets_ = other.replicaSets_;
              bitField0_ = (bitField0_ & ~0x00000002);
              replicaSetsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getReplicaSetsFieldBuilder() : null;
            } else {
              replicaSetsBuilder_.addAllMessages(other.replicaSets_);
            }
          }
        }
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000004);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.cassandra.compactlb.StateEnc.State parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.cassandra.compactlb.StateEnc.State) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long nowMillis_ ;
      /**
       * <code>optional int64 now_millis = 1;</code>
       */
      public long getNowMillis() {
        return nowMillis_;
      }
      /**
       * <code>optional int64 now_millis = 1;</code>
       */
      public Builder setNowMillis(long value) {
        
        nowMillis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 now_millis = 1;</code>
       */
      public Builder clearNowMillis() {
        
        nowMillis_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<org.apache.cassandra.compactlb.StateEnc.ReplicaSet> replicaSets_ =
        java.util.Collections.emptyList();
      private void ensureReplicaSetsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          replicaSets_ = new java.util.ArrayList<org.apache.cassandra.compactlb.StateEnc.ReplicaSet>(replicaSets_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.cassandra.compactlb.StateEnc.ReplicaSet, org.apache.cassandra.compactlb.StateEnc.ReplicaSet.Builder, org.apache.cassandra.compactlb.StateEnc.ReplicaSetOrBuilder> replicaSetsBuilder_;

      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public java.util.List<org.apache.cassandra.compactlb.StateEnc.ReplicaSet> getReplicaSetsList() {
        if (replicaSetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(replicaSets_);
        } else {
          return replicaSetsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public int getReplicaSetsCount() {
        if (replicaSetsBuilder_ == null) {
          return replicaSets_.size();
        } else {
          return replicaSetsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.ReplicaSet getReplicaSets(int index) {
        if (replicaSetsBuilder_ == null) {
          return replicaSets_.get(index);
        } else {
          return replicaSetsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public Builder setReplicaSets(
          int index, org.apache.cassandra.compactlb.StateEnc.ReplicaSet value) {
        if (replicaSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReplicaSetsIsMutable();
          replicaSets_.set(index, value);
          onChanged();
        } else {
          replicaSetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public Builder setReplicaSets(
          int index, org.apache.cassandra.compactlb.StateEnc.ReplicaSet.Builder builderForValue) {
        if (replicaSetsBuilder_ == null) {
          ensureReplicaSetsIsMutable();
          replicaSets_.set(index, builderForValue.build());
          onChanged();
        } else {
          replicaSetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public Builder addReplicaSets(org.apache.cassandra.compactlb.StateEnc.ReplicaSet value) {
        if (replicaSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReplicaSetsIsMutable();
          replicaSets_.add(value);
          onChanged();
        } else {
          replicaSetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public Builder addReplicaSets(
          int index, org.apache.cassandra.compactlb.StateEnc.ReplicaSet value) {
        if (replicaSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReplicaSetsIsMutable();
          replicaSets_.add(index, value);
          onChanged();
        } else {
          replicaSetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public Builder addReplicaSets(
          org.apache.cassandra.compactlb.StateEnc.ReplicaSet.Builder builderForValue) {
        if (replicaSetsBuilder_ == null) {
          ensureReplicaSetsIsMutable();
          replicaSets_.add(builderForValue.build());
          onChanged();
        } else {
          replicaSetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public Builder addReplicaSets(
          int index, org.apache.cassandra.compactlb.StateEnc.ReplicaSet.Builder builderForValue) {
        if (replicaSetsBuilder_ == null) {
          ensureReplicaSetsIsMutable();
          replicaSets_.add(index, builderForValue.build());
          onChanged();
        } else {
          replicaSetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public Builder addAllReplicaSets(
          java.lang.Iterable<? extends org.apache.cassandra.compactlb.StateEnc.ReplicaSet> values) {
        if (replicaSetsBuilder_ == null) {
          ensureReplicaSetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, replicaSets_);
          onChanged();
        } else {
          replicaSetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public Builder clearReplicaSets() {
        if (replicaSetsBuilder_ == null) {
          replicaSets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          replicaSetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public Builder removeReplicaSets(int index) {
        if (replicaSetsBuilder_ == null) {
          ensureReplicaSetsIsMutable();
          replicaSets_.remove(index);
          onChanged();
        } else {
          replicaSetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.ReplicaSet.Builder getReplicaSetsBuilder(
          int index) {
        return getReplicaSetsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.ReplicaSetOrBuilder getReplicaSetsOrBuilder(
          int index) {
        if (replicaSetsBuilder_ == null) {
          return replicaSets_.get(index);  } else {
          return replicaSetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public java.util.List<? extends org.apache.cassandra.compactlb.StateEnc.ReplicaSetOrBuilder> 
           getReplicaSetsOrBuilderList() {
        if (replicaSetsBuilder_ != null) {
          return replicaSetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(replicaSets_);
        }
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.ReplicaSet.Builder addReplicaSetsBuilder() {
        return getReplicaSetsFieldBuilder().addBuilder(
            org.apache.cassandra.compactlb.StateEnc.ReplicaSet.getDefaultInstance());
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.ReplicaSet.Builder addReplicaSetsBuilder(
          int index) {
        return getReplicaSetsFieldBuilder().addBuilder(
            index, org.apache.cassandra.compactlb.StateEnc.ReplicaSet.getDefaultInstance());
      }
      /**
       * <code>repeated .ReplicaSet replica_sets = 2;</code>
       */
      public java.util.List<org.apache.cassandra.compactlb.StateEnc.ReplicaSet.Builder> 
           getReplicaSetsBuilderList() {
        return getReplicaSetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.cassandra.compactlb.StateEnc.ReplicaSet, org.apache.cassandra.compactlb.StateEnc.ReplicaSet.Builder, org.apache.cassandra.compactlb.StateEnc.ReplicaSetOrBuilder> 
          getReplicaSetsFieldBuilder() {
        if (replicaSetsBuilder_ == null) {
          replicaSetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.cassandra.compactlb.StateEnc.ReplicaSet, org.apache.cassandra.compactlb.StateEnc.ReplicaSet.Builder, org.apache.cassandra.compactlb.StateEnc.ReplicaSetOrBuilder>(
                  replicaSets_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          replicaSets_ = null;
        }
        return replicaSetsBuilder_;
      }

      private java.util.List<org.apache.cassandra.compactlb.StateEnc.Node> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          nodes_ = new java.util.ArrayList<org.apache.cassandra.compactlb.StateEnc.Node>(nodes_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.cassandra.compactlb.StateEnc.Node, org.apache.cassandra.compactlb.StateEnc.Node.Builder, org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder> nodesBuilder_;

      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public java.util.List<org.apache.cassandra.compactlb.StateEnc.Node> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.Node getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public Builder setNodes(
          int index, org.apache.cassandra.compactlb.StateEnc.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public Builder setNodes(
          int index, org.apache.cassandra.compactlb.StateEnc.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public Builder addNodes(org.apache.cassandra.compactlb.StateEnc.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public Builder addNodes(
          int index, org.apache.cassandra.compactlb.StateEnc.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public Builder addNodes(
          org.apache.cassandra.compactlb.StateEnc.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public Builder addNodes(
          int index, org.apache.cassandra.compactlb.StateEnc.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends org.apache.cassandra.compactlb.StateEnc.Node> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.Node.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public java.util.List<? extends org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.Node.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            org.apache.cassandra.compactlb.StateEnc.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.Node.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, org.apache.cassandra.compactlb.StateEnc.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .Node nodes = 3;</code>
       */
      public java.util.List<org.apache.cassandra.compactlb.StateEnc.Node.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.cassandra.compactlb.StateEnc.Node, org.apache.cassandra.compactlb.StateEnc.Node.Builder, org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.cassandra.compactlb.StateEnc.Node, org.apache.cassandra.compactlb.StateEnc.Node.Builder, org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:State)
    }

    // @@protoc_insertion_point(class_scope:State)
    private static final org.apache.cassandra.compactlb.StateEnc.State DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.cassandra.compactlb.StateEnc.State();
    }

    public static org.apache.cassandra.compactlb.StateEnc.State getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<State>
        PARSER = new com.google.protobuf.AbstractParser<State>() {
      public State parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new State(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<State> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<State> getParserForType() {
      return PARSER;
    }

    public org.apache.cassandra.compactlb.StateEnc.State getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReplicaSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ReplicaSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Node nodes = 1;</code>
     */
    java.util.List<org.apache.cassandra.compactlb.StateEnc.Node> 
        getNodesList();
    /**
     * <code>repeated .Node nodes = 1;</code>
     */
    org.apache.cassandra.compactlb.StateEnc.Node getNodes(int index);
    /**
     * <code>repeated .Node nodes = 1;</code>
     */
    int getNodesCount();
    /**
     * <code>repeated .Node nodes = 1;</code>
     */
    java.util.List<? extends org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <code>repeated .Node nodes = 1;</code>
     */
    org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder getNodesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ReplicaSet}
   */
  public  static final class ReplicaSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ReplicaSet)
      ReplicaSetOrBuilder {
    // Use ReplicaSet.newBuilder() to construct.
    private ReplicaSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReplicaSet() {
      nodes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReplicaSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                nodes_ = new java.util.ArrayList<org.apache.cassandra.compactlb.StateEnc.Node>();
                mutable_bitField0_ |= 0x00000001;
              }
              nodes_.add(
                  input.readMessage(org.apache.cassandra.compactlb.StateEnc.Node.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.cassandra.compactlb.StateEnc.internal_static_ReplicaSet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.cassandra.compactlb.StateEnc.internal_static_ReplicaSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.cassandra.compactlb.StateEnc.ReplicaSet.class, org.apache.cassandra.compactlb.StateEnc.ReplicaSet.Builder.class);
    }

    public static final int NODES_FIELD_NUMBER = 1;
    private java.util.List<org.apache.cassandra.compactlb.StateEnc.Node> nodes_;
    /**
     * <code>repeated .Node nodes = 1;</code>
     */
    public java.util.List<org.apache.cassandra.compactlb.StateEnc.Node> getNodesList() {
      return nodes_;
    }
    /**
     * <code>repeated .Node nodes = 1;</code>
     */
    public java.util.List<? extends org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <code>repeated .Node nodes = 1;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <code>repeated .Node nodes = 1;</code>
     */
    public org.apache.cassandra.compactlb.StateEnc.Node getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <code>repeated .Node nodes = 1;</code>
     */
    public org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(1, nodes_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodes_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.cassandra.compactlb.StateEnc.ReplicaSet)) {
        return super.equals(obj);
      }
      org.apache.cassandra.compactlb.StateEnc.ReplicaSet other = (org.apache.cassandra.compactlb.StateEnc.ReplicaSet) obj;

      boolean result = true;
      result = result && getNodesList()
          .equals(other.getNodesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.cassandra.compactlb.StateEnc.ReplicaSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.cassandra.compactlb.StateEnc.ReplicaSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.cassandra.compactlb.StateEnc.ReplicaSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.cassandra.compactlb.StateEnc.ReplicaSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.cassandra.compactlb.StateEnc.ReplicaSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.cassandra.compactlb.StateEnc.ReplicaSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.cassandra.compactlb.StateEnc.ReplicaSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.cassandra.compactlb.StateEnc.ReplicaSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.cassandra.compactlb.StateEnc.ReplicaSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.cassandra.compactlb.StateEnc.ReplicaSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.cassandra.compactlb.StateEnc.ReplicaSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ReplicaSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ReplicaSet)
        org.apache.cassandra.compactlb.StateEnc.ReplicaSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.cassandra.compactlb.StateEnc.internal_static_ReplicaSet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.cassandra.compactlb.StateEnc.internal_static_ReplicaSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.cassandra.compactlb.StateEnc.ReplicaSet.class, org.apache.cassandra.compactlb.StateEnc.ReplicaSet.Builder.class);
      }

      // Construct using org.apache.cassandra.compactlb.StateEnc.ReplicaSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.cassandra.compactlb.StateEnc.internal_static_ReplicaSet_descriptor;
      }

      public org.apache.cassandra.compactlb.StateEnc.ReplicaSet getDefaultInstanceForType() {
        return org.apache.cassandra.compactlb.StateEnc.ReplicaSet.getDefaultInstance();
      }

      public org.apache.cassandra.compactlb.StateEnc.ReplicaSet build() {
        org.apache.cassandra.compactlb.StateEnc.ReplicaSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.cassandra.compactlb.StateEnc.ReplicaSet buildPartial() {
        org.apache.cassandra.compactlb.StateEnc.ReplicaSet result = new org.apache.cassandra.compactlb.StateEnc.ReplicaSet(this);
        int from_bitField0_ = bitField0_;
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.cassandra.compactlb.StateEnc.ReplicaSet) {
          return mergeFrom((org.apache.cassandra.compactlb.StateEnc.ReplicaSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.cassandra.compactlb.StateEnc.ReplicaSet other) {
        if (other == org.apache.cassandra.compactlb.StateEnc.ReplicaSet.getDefaultInstance()) return this;
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.cassandra.compactlb.StateEnc.ReplicaSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.cassandra.compactlb.StateEnc.ReplicaSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.apache.cassandra.compactlb.StateEnc.Node> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = new java.util.ArrayList<org.apache.cassandra.compactlb.StateEnc.Node>(nodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.cassandra.compactlb.StateEnc.Node, org.apache.cassandra.compactlb.StateEnc.Node.Builder, org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder> nodesBuilder_;

      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public java.util.List<org.apache.cassandra.compactlb.StateEnc.Node> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.Node getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public Builder setNodes(
          int index, org.apache.cassandra.compactlb.StateEnc.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public Builder setNodes(
          int index, org.apache.cassandra.compactlb.StateEnc.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public Builder addNodes(org.apache.cassandra.compactlb.StateEnc.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public Builder addNodes(
          int index, org.apache.cassandra.compactlb.StateEnc.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public Builder addNodes(
          org.apache.cassandra.compactlb.StateEnc.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public Builder addNodes(
          int index, org.apache.cassandra.compactlb.StateEnc.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends org.apache.cassandra.compactlb.StateEnc.Node> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.Node.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public java.util.List<? extends org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.Node.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            org.apache.cassandra.compactlb.StateEnc.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public org.apache.cassandra.compactlb.StateEnc.Node.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, org.apache.cassandra.compactlb.StateEnc.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .Node nodes = 1;</code>
       */
      public java.util.List<org.apache.cassandra.compactlb.StateEnc.Node.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.cassandra.compactlb.StateEnc.Node, org.apache.cassandra.compactlb.StateEnc.Node.Builder, org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.cassandra.compactlb.StateEnc.Node, org.apache.cassandra.compactlb.StateEnc.Node.Builder, org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ReplicaSet)
    }

    // @@protoc_insertion_point(class_scope:ReplicaSet)
    private static final org.apache.cassandra.compactlb.StateEnc.ReplicaSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.cassandra.compactlb.StateEnc.ReplicaSet();
    }

    public static org.apache.cassandra.compactlb.StateEnc.ReplicaSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReplicaSet>
        PARSER = new com.google.protobuf.AbstractParser<ReplicaSet>() {
      public ReplicaSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReplicaSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReplicaSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReplicaSet> getParserForType() {
      return PARSER;
    }

    public org.apache.cassandra.compactlb.StateEnc.ReplicaSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Node)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string addr = 1;</code>
     */
    java.lang.String getAddr();
    /**
     * <code>optional string addr = 1;</code>
     */
    com.google.protobuf.ByteString
        getAddrBytes();

    /**
     * <pre>
     * &lt; 0 indicates missing
     * </pre>
     *
     * <code>optional sint32 pending = 2;</code>
     */
    int getPending();
  }
  /**
   * Protobuf type {@code Node}
   */
  public  static final class Node extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Node)
      NodeOrBuilder {
    // Use Node.newBuilder() to construct.
    private Node(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Node() {
      addr_ = "";
      pending_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Node(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              addr_ = s;
              break;
            }
            case 16: {

              pending_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.cassandra.compactlb.StateEnc.internal_static_Node_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.cassandra.compactlb.StateEnc.internal_static_Node_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.cassandra.compactlb.StateEnc.Node.class, org.apache.cassandra.compactlb.StateEnc.Node.Builder.class);
    }

    public static final int ADDR_FIELD_NUMBER = 1;
    private volatile java.lang.Object addr_;
    /**
     * <code>optional string addr = 1;</code>
     */
    public java.lang.String getAddr() {
      java.lang.Object ref = addr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        addr_ = s;
        return s;
      }
    }
    /**
     * <code>optional string addr = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAddrBytes() {
      java.lang.Object ref = addr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        addr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PENDING_FIELD_NUMBER = 2;
    private int pending_;
    /**
     * <pre>
     * &lt; 0 indicates missing
     * </pre>
     *
     * <code>optional sint32 pending = 2;</code>
     */
    public int getPending() {
      return pending_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAddrBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, addr_);
      }
      if (pending_ != 0) {
        output.writeSInt32(2, pending_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAddrBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, addr_);
      }
      if (pending_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, pending_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.cassandra.compactlb.StateEnc.Node)) {
        return super.equals(obj);
      }
      org.apache.cassandra.compactlb.StateEnc.Node other = (org.apache.cassandra.compactlb.StateEnc.Node) obj;

      boolean result = true;
      result = result && getAddr()
          .equals(other.getAddr());
      result = result && (getPending()
          == other.getPending());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ADDR_FIELD_NUMBER;
      hash = (53 * hash) + getAddr().hashCode();
      hash = (37 * hash) + PENDING_FIELD_NUMBER;
      hash = (53 * hash) + getPending();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.cassandra.compactlb.StateEnc.Node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.cassandra.compactlb.StateEnc.Node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.cassandra.compactlb.StateEnc.Node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.cassandra.compactlb.StateEnc.Node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.cassandra.compactlb.StateEnc.Node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.cassandra.compactlb.StateEnc.Node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.cassandra.compactlb.StateEnc.Node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.cassandra.compactlb.StateEnc.Node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.cassandra.compactlb.StateEnc.Node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.cassandra.compactlb.StateEnc.Node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.cassandra.compactlb.StateEnc.Node prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Node}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Node)
        org.apache.cassandra.compactlb.StateEnc.NodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.cassandra.compactlb.StateEnc.internal_static_Node_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.cassandra.compactlb.StateEnc.internal_static_Node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.cassandra.compactlb.StateEnc.Node.class, org.apache.cassandra.compactlb.StateEnc.Node.Builder.class);
      }

      // Construct using org.apache.cassandra.compactlb.StateEnc.Node.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        addr_ = "";

        pending_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.cassandra.compactlb.StateEnc.internal_static_Node_descriptor;
      }

      public org.apache.cassandra.compactlb.StateEnc.Node getDefaultInstanceForType() {
        return org.apache.cassandra.compactlb.StateEnc.Node.getDefaultInstance();
      }

      public org.apache.cassandra.compactlb.StateEnc.Node build() {
        org.apache.cassandra.compactlb.StateEnc.Node result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.cassandra.compactlb.StateEnc.Node buildPartial() {
        org.apache.cassandra.compactlb.StateEnc.Node result = new org.apache.cassandra.compactlb.StateEnc.Node(this);
        result.addr_ = addr_;
        result.pending_ = pending_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.cassandra.compactlb.StateEnc.Node) {
          return mergeFrom((org.apache.cassandra.compactlb.StateEnc.Node)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.cassandra.compactlb.StateEnc.Node other) {
        if (other == org.apache.cassandra.compactlb.StateEnc.Node.getDefaultInstance()) return this;
        if (!other.getAddr().isEmpty()) {
          addr_ = other.addr_;
          onChanged();
        }
        if (other.getPending() != 0) {
          setPending(other.getPending());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.cassandra.compactlb.StateEnc.Node parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.cassandra.compactlb.StateEnc.Node) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object addr_ = "";
      /**
       * <code>optional string addr = 1;</code>
       */
      public java.lang.String getAddr() {
        java.lang.Object ref = addr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          addr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string addr = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAddrBytes() {
        java.lang.Object ref = addr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          addr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string addr = 1;</code>
       */
      public Builder setAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        addr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string addr = 1;</code>
       */
      public Builder clearAddr() {
        
        addr_ = getDefaultInstance().getAddr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string addr = 1;</code>
       */
      public Builder setAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        addr_ = value;
        onChanged();
        return this;
      }

      private int pending_ ;
      /**
       * <pre>
       * &lt; 0 indicates missing
       * </pre>
       *
       * <code>optional sint32 pending = 2;</code>
       */
      public int getPending() {
        return pending_;
      }
      /**
       * <pre>
       * &lt; 0 indicates missing
       * </pre>
       *
       * <code>optional sint32 pending = 2;</code>
       */
      public Builder setPending(int value) {
        
        pending_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &lt; 0 indicates missing
       * </pre>
       *
       * <code>optional sint32 pending = 2;</code>
       */
      public Builder clearPending() {
        
        pending_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Node)
    }

    // @@protoc_insertion_point(class_scope:Node)
    private static final org.apache.cassandra.compactlb.StateEnc.Node DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.cassandra.compactlb.StateEnc.Node();
    }

    public static org.apache.cassandra.compactlb.StateEnc.Node getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Node>
        PARSER = new com.google.protobuf.AbstractParser<Node>() {
      public Node parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Node(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Node> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Node> getParserForType() {
      return PARSER;
    }

    public org.apache.cassandra.compactlb.StateEnc.Node getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_State_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_State_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ReplicaSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ReplicaSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Node_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Node_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013state.proto\"T\n\005State\022\022\n\nnow_millis\030\001 \001" +
      "(\003\022!\n\014replica_sets\030\002 \003(\0132\013.ReplicaSet\022\024\n" +
      "\005nodes\030\003 \003(\0132\005.Node\"\"\n\nReplicaSet\022\024\n\005nod" +
      "es\030\001 \003(\0132\005.Node\"%\n\004Node\022\014\n\004addr\030\001 \001(\t\022\017\n" +
      "\007pending\030\002 \001(\021B*\n\036org.apache.cassandra.c" +
      "ompactlbB\010StateEncb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_State_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_State_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_State_descriptor,
        new java.lang.String[] { "NowMillis", "ReplicaSets", "Nodes", });
    internal_static_ReplicaSet_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ReplicaSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ReplicaSet_descriptor,
        new java.lang.String[] { "Nodes", });
    internal_static_Node_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Node_descriptor,
        new java.lang.String[] { "Addr", "Pending", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
